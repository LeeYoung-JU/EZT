<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.wkr.mapper.WorkerMapper">

	<select id="selectCategoryInfo" resultType="java.util.HashMap">
		SELECT FIND_COMMONCODE(category_code) as category_code
		FROM active_category
		WHERE users_no = #{usersNo}
	</select>
	
	<select id="selectRegionInfo" resultType="java.util.HashMap">
		SELECT FIND_COMMONCODE(region_code) as region_code
		FROM active_region
		WHERE users_no = #{usersNo}
	</select>
	
	<!-- 경력증명서 리스트 -->
	<select id="selectCareerList" resultType="CareerVO">
		SELECT c.*
		FROM (
			  SELECT ROWNUM as rn
			  		, a.*
			  FROM (SELECT career_start_dt
						   , career_end_dt
						   , write_dt
						   , career_info
						   , FIND_COMMONCODE(career_access_tf) as career_access_tf
						   , c.file_id
						   , f.save_path
						   , f.save_name
						   , f.original_file_name
						   , f.ext
						   , f.boss_tf
					FROM career c
						LEFT JOIN file_detail_info f
						ON c.file_id = f.file_id
					WHERE users_no = #{usersNo}
					<if test="careerAccessTf != null and careerAccessTf != ''.toString()">
						AND career_access_tf = #{careerAccessTf}
					</if>
					ORDER BY write_dt DESC) a 
			 ) c
		<![CDATA[
		WHERE c.rn <= #{pageNum} * #{amount} AND
			  c.rn > (#{pageNum} -1 ) * #{amount}
		]]>
	</select>
	<!-- 경력증명서 데이터갯수  -->
	<select id="getWorkerTotalCareerList" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT career_start_dt
						   , career_end_dt
						   , write_dt
						   , career_info
						   , FIND_COMMONCODE(career_access_tf) as career_access_tf
						   , file_id
				FROM career
				WHERE users_no = #{usersNo}
				<if test="careerAccessTf != null and careerAccessTf != ''.toString()">
					AND career_access_tf = #{careerAccessTf}
				</if>
			  )
	</select>
	<!-- 후기목록 조회 -->
	<select id="selectWorkerReviewList" resultType="ReviewVO">
		SELECT c.*
		FROM (
			  SELECT ROWNUM as rn
			  		, a.*
			  FROM ( SELECT *
					 FROM review
					 WHERE worker = #{usersNo}
					 <choose>
					   <when test="starState != null and starState != ''.toString()">ORDER BY star ${starState}</when>
					   <otherwise>ORDER BY write_dt DESC</otherwise>	 
					 </choose>
					 
			       ) a 
			 ) c
		<![CDATA[
		WHERE c.rn <= #{pageNum} * #{amount} AND
			  c.rn > (#{pageNum} -1 ) * #{amount}
		]]>
	</select>
	<!--후기목록 데이터 갯수-->
	<select id="getWorkerTotalReviewCount" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT *
			  FROM review
			  WHERE worker = #{usersNo}
			  <choose>
			    <when test="starState != null and starState != ''.toString()">ORDER BY star ${starState}</when>
			    <otherwise>ORDER BY write_dt DESC</otherwise>	 
			  </choose>)
	</select>
	<!-- 팀 후기목록 조회 -->
	<select id="selectWorkerTeamReviewList" resultType="ReviewVO">
	SELECT c.*
	FROM (
		  SELECT ROWNUM as rn
		  		, a.*
		  FROM (SELECT *
				FROM review
				WHERE worker IN (SELECT writer
		                		 FROM team
		                		 WHERE team_no IN (SELECT team_no
		                                  		   FROM member
		                                  		   WHERE users_no = #{usersNo}
		                                  		   )
		        				)
		        ORDER BY write_dt DESC
		        ) a 
		  ) c
		<![CDATA[
		WHERE c.rn <= #{pageNum} * #{amount} AND
			  c.rn > (#{pageNum} -1 ) * #{amount}
		]]>
	</select>
	<!--팀 후기목록 데이터 갯수-->
	<select id="getWorkerTotalTeamReviewCount" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT *
			  FROM review
			  WHERE worker IN (SELECT writer
	                		   FROM team
	                		   WHERE team_no IN (SELECT team_no
	                                  		     FROM member
	                                  		     WHERE users_no = #{usersNo}
	                                  		     )
	                           )
	          )                 
	</select>
	
	<!--  의뢰 목록 조회 -->
	<select id="selectWorkerRequestList" resultType="RequestVO">
		SELECT c.*
		FROM (SELECT ROWNUM as rn
			  		, a.*
	  		  FROM (SELECT title
	  		  			   , request_no
				   	 	   , write_dt
				   		   , FIND_COMMONCODE(request_state) as request_state_nm
				    FROM request
					WHERE request_no IN (SELECT request_no
			                     		 FROM proposal
			                     		 WHERE proposal_state = 'A02'
			                     		 AND worker = #{usersNo})
			        ORDER BY write_dt DESC
			        )  a 
			  ) c
			<![CDATA[
			WHERE c.rn <= #{pageNum} * #{amount} AND
				  c.rn > (#{pageNum} -1 ) * #{amount}
			]]>    		                     		
	</select>
	<!-- 의뢰목록 데이터갯수조회 -->
	<select id="getWorkerTotalRequestCount" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT title
					 , request_no
			   	 	 , write_dt
			   		 , FIND_COMMONCODE(request_state) as request_state_nm
			  FROM request
			  WHERE request_no IN (SELECT request_no
		                     	   FROM proposal
		                     	   WHERE proposal_state = 'A02'
		                     	   AND worker = #{usersNo})
			  )
	</select>
	
	<!--  팀 의뢰 목록 조회 -->
	<select id="selectWorkerTeamRequestList" resultType="RequestVO">
		SELECT c.*
		FROM (SELECT ROWNUM as rn
			  		, a.*
	  		  FROM ( SELECT r.*
					 FROM request r
					 JOIN proposal p ON r.request_no = p.request_no
					 JOIN team t ON p.worker = t.writer
					 JOIN member m ON t.team_no = m.team_no
					 WHERE m.users_no = #{usersNo}
					 AND p.proposal_state = 'S02'
					 ORDER BY r.request_no DESC)  a 
			  ) c
			<![CDATA[
			WHERE c.rn <= #{pageNum} * #{amount} AND
				  c.rn > (#{pageNum} -1 ) * #{amount}
			]]>    
	</select>
	<!-- 팀의뢰목록 데이터갯수 -->
	<select id="selectWorkerTeamRequestCount" resultType="int">
		SELECT COUNT(*)
		FROM ( SELECT r.*
			   FROM request r
			   JOIN proposal p ON r.request_no = p.request_no
			   JOIN team t ON p.worker = t.writer
			   JOIN member m ON t.team_no = m.team_no
			   WHERE m.users_no = #{usersNo}
			   AND p.proposal_state = 'S02'
			   ORDER BY r.request_no DESC)
	</select>

	<!-- 견적서 목록 조회 -->
	<select id="selectWorkerProposalList" resultType="ProposalVO">
	SELECT c.*
	FROM (SELECT ROWNUM as rn
		  		, a.*
		  FROM (SELECT p.*
					   , FIND_COMMONCODE(p.proposal_state) as proposal_state_nm
			       	   , (SELECT SUM(pd.unitprice * pd.qty)
			              FROM proposal_detail pd
			              WHERE pd.proposal_no = p.proposal_no) as total
			           , (SELECT contract_no
				          FROM contract c
				          WHERE c.proposal_no = p.proposal_no
				          AND rownum = 1) contract_no
				       , (SELECT r.title
                          FROM request r
                          WHERE r.request_no = p.request_no) as title
				FROM proposal p
				WHERE worker = #{usersNo}
			    <if test="proposalState != null and proposalState != ''.toString()">
					  AND proposal_state = #{proposalState}
			    </if>
				ORDER BY update_dt DESC
				)  a 
		  ) c
		<![CDATA[
		WHERE c.rn <= #{pageNum} * #{amount} AND
			  c.rn > (#{pageNum} -1 ) * #{amount}
		]]>  
	</select>
	<!-- 견적서 목록데이터 갯수조회 -->
	<select id="getWorkerTotalProposalCount" resultType="int">
	SELECT COUNT(*)
	FROM (SELECT p.*
			       , FIND_COMMONCODE(p.proposal_state) as proposal_state_nm
        	       , (SELECT SUM(pd.unitprice * pd.qty)
	                  FROM proposal_detail pd
	                  WHERE pd.proposal_no = p.proposal_no) as total
		  FROM proposal p
		  WHERE worker = #{usersNo}
	      <if test="proposalState != null and proposalState != ''.toString()">
			    AND proposal_state = #{proposalState}
	      </if>
		 )
	</select>
	
	<select id="chkContract" resultType="int">
		SELECT COUNT(*)
		FROM contract
		WHERE proposal_no = #{proposalNo}
	</select>
	
	<!-- 계약서 목록 조회 -->
	<select id="selectWorkerContractList" resultType="ContractVO">
		SELECT c.*
		FROM (SELECT ROWNUM as rn
			  		, a.*
			  FROM (SELECT c.ctt_name
			  			   , c.contract_no
			  			   , c.write_dt
			  			   , c.ctt_start_dt
			  			   , c.ctt_end_dt
			  			   , FIND_COMMONCODE(c.contract_state) as contract_state_nm
			  			   , NVL((SELECT t.team_no
			  			   		  FROM team t
			  			   		  WHERE t.contract_no = c.contract_no
			  			   		  AND rownum = 1), 0) team_no
					FROM contract c
					WHERE c.worker_info = #{usersNo}
					  <if test="contractState != null and contractState != ''.toString()">
							AND contract_state = #{contractState}
					  </if>
					ORDER BY update_dt DESC)  a 
			  ) c
			<![CDATA[
			WHERE c.rn <= #{pageNum} * #{amount} AND
				  c.rn > (#{pageNum} -1 ) * #{amount}
			]]>  
	</select>
	<!-- 계약서 데이터 갯수 -->
	<select id="getWorkerTotalContractCount" resultType="int">
		SELECT COUNT (*)
		FROM (SELECT c.*, FIND_COMMONCODE(c.contract_state) as contract_state_nm
			  FROM contract c
		 	  WHERE worker_info = #{usersNo}
		 	  <if test="contractState != null and contractState != ''.toString()">
					AND contract_state = #{contractState}
			  </if>
			 )
	</select>
	
	<!-- 포트폴리오 목록조회 -->
	<select id="selectWorkerPortfolioList" resultType="PortfolioVO">
		SELECT c.*
		FROM (SELECT ROWNUM as rn
			  		, a.*
			  FROM (SELECT p.PORTFOLIO_NO
							,p.TITLE
							,p.CONTENT
							,p.PYUNG
							,p.PRICE
							,p.USERS_NO
							,p.FILE_ID
							,p.WRITE_DT
							,p.UPDATE_DT
							,p.WORK_TIME
							,p.CATEGORY_CODE
							,FIND_COMMONCODE(p.pyung) pyung_nm
							,f.save_path
							,f.save_name
							,f.original_file_name
							,f.ext
					FROM portfolio p
					JOIN (SELECT *
				            FROM file_detail_info
				            WHERE boss_tf = 'Y') f
				      ON p.file_id = f.file_id
					WHERE p.users_no = #{usersNo}
					<if test="title != null and title != ''.toString()">
						AND title like '%'||#{title}||'%' 
					</if>
					ORDER BY p.write_dt DESC)  a 
			  ) c
			<![CDATA[
			WHERE c.rn <= #{pageNum} * #{amount} AND
				  c.rn > (#{pageNum} -1 ) * #{amount}
			]]>  
	</select>
	
	<select id="getWorkerTotalPortfolioCount" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT *
			 FROM portfolio
			 WHERE users_no = #{usersNo}
		     )
	</select>
	<!-- 자격증 목록조회 -->
	<select id="selectWorkerLicenseList" resultType="LicenseVO">
		SELECT c.*
		FROM (
			  SELECT ROWNUM as rn
			  		, a.*
			  FROM (
					SELECT l.*, f.save_path,  f.save_name, f.original_file_name, f.ext
					FROM license l
					    LEFT JOIN file_detail_info f ON l.file_id = f.file_id
					WHERE users_no = #{usersNo} 
					ORDER BY write_dt DESC ) a ) c
		<![CDATA[
		WHERE c.rn <= #{pageNum} * #{amount} AND
			  c.rn > (#{pageNum} -1 ) * #{amount}
		]]>
	</select>
	<!-- 자격증 갯수조회 -->
	<select id="getWorkerTotalLicenseCount" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT *
			  FROM license
			  WHERE users_no = #{usersNo})
			  	
	</select>
	<!-- 작업자 정보수정 -->
	<delete id="deleteWorkerRegion" parameterType="UserVO">
		DELETE FROM active_region
		WHERE users_no = #{usersNo}
	</delete>
	
	<delete id="deleteWorkerCategory" parameterType="UserVO">
		DELETE FROM active_category
		WHERE users_no = #{usersNo}
	</delete>
	
	<!-- 포트폴리오 등록 -->
	<insert id="insertWorkerPortfolio" parameterType="PortfolioVO">
		INSERT INTO portfolio ( portfolio_no
								, title
								, content
								, pyung
								, price
								, users_no
								, file_id
								, write_dt
								, update_dt
								, work_time
								, category_code
							  )VALUES(
							  	SEQ_PORTFOLIO.NEXTVAL
								, #{title}
								, #{content}
								, #{pyung}
								, #{price}
								, #{usersNo}
								, #{fileId}
								, sysdate
								, sysdate
								, #{workTime}
								, #{categoryCode}
							  )
	</insert>
	<!-- 자격증 등록 -->
	<insert id="insertWorkerLicense" parameterType="LicenseVO">
		INSERT INTO license(license_no
						    , license_detail_no
						    , users_no
						    , license_get_dt
						    , license_info
						    , write_dt
						    , file_id
						    , check_center
						    )VALUES(
						     SEQ_LICENSE.NEXTVAL
						     , #{licenseDetailNo}
						     , #{usersNo}
						     , #{licenseGetDt}
						     , #{licenseInfo}
						     , sysdate
						     , #{fileId}
						     , #{checkCenter}
						    )
	</insert>
	
	<insert id="insertWorkerCode" parameterType="UserVO">
		INSERT ALL
		
		<foreach item="region" collection="regionCode" separator="">
		INTO active_region( users_no, region_code ) 
		VALUES ( #{usersNo}, #{region} )
		</foreach>

	
		<foreach item="category" collection="categoryCode" separator="">
		INTO active_category( users_no, category_code )
		VALUES (#{usersNo}, #{category} )
		</foreach>
		
		SELECT *
		FROM dual
	</insert>

	<!--경력증명서 등록 -->
	<insert id="insertCareer" parameterType="CareerVO">
		INSERT INTO career( career_no
							, users_no
							, career_info
							, career_start_dt
							, career_end_dt
							, file_id
							, career_access_tf
							, write_dt
							) VALUES (
							 SEQ_CAREER.NEXTVAL
							 , #{usersNo}
							 , #{careerInfo}
							 , #{careerStartDt}
							 , #{careerEndDt}
							 , #{fileId}
							 , 'A01'
							 , sysdate
							)
	</insert>


	<update id="updateWorkerInfo" parameterType="UserVO">
		UPDATE users
		SET file_id = #{fileId}
		    , users_nick = #{usersNick}
			, users_phone = #{usersPhone}
			, users_email = #{usersEmail}
		WHERE users_id = #{usersId}
	</update>

	<update id="updateWorkerPw" parameterType="UserVO">
		UPDATE users
		SER users_pw = #{usersNewPw}
		WHERE users_id = #{usersId}
	</update>

	<!-- 작업자 탈퇴 -->
	<update id="updateWorkerState" parameterType="UserVO">
		UPDATE users
		SET users_state = 'quit'
		WHERE users_id = #{usersId}
	</update>
	
	
</mapper>