<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.wkr.mapper.WorkerMapper">
	<select id="selectCategoryInfo" resultType="java.util.HashMap">
		SELECT FIND_COMMONCODE(category_code) as category_code
		FROM active_category
		WHERE users_no = #{usersNo}
	</select>
	
	<select id="selectRegionInfo" resultType="java.util.HashMap">
		SELECT FIND_COMMONCODE(region_code) as region_code
		FROM active_region
		WHERE users_no = #{usersNo}
	</select>
	
	<!-- 경력증명서 리스트 -->
	<select id="selectCareerList" resultType="CareerVO">
		SELECT career_start_dt
			   , career_end_dt
			   , write_dt
			   , career_info
			   , FIND_COMMONCODE(career_access_tf) as career_access_tf
			   , file_id
		FROM career
		WHERE users_no = #{usersNo}
	</select>
	
	<!-- 후기목록 조회 -->
	<select id="selectWorkerReviewList" resultType="ReviewVO">
		SELECT c.*
		FROM (
			  SELECT ROWNUM as rn
			  		, a.*
			  FROM (
					SELECT *
					FROM review
					WHERE worker = #{usersNo}
					ORDER BY write_dt desc ) a ) c
		<![CDATA[
		WHERE c.rn <= #{pageNum} * #{amount} AND
			  c.rn > (#{pageNum} -1 ) * #{amount}
		]]>
	</select>
	
	<select id="getTotalReviewCount" resultType="int">
		SELECT COUNT(*)
		FROM (
			  SELECT ROWNUM as rn
			  		, a.*
			  FROM (
					SELECT *
					FROM review
					WHERE worker = #{usersNo})
	</select>
	<!-- 팀 후기목록 조회 -->
	<select id="selectWorkerTeamReviewList" resultType="ReviewVO">
		SELECT *
		FROM review
		WHERE worker IN (SELECT writer
                 		 FROM team
                 		 WHERE team_no IN (SELECT team_no
                                   		   FROM member
                                   		   WHERE users_no = #{usersNo}))
	</select>
	
	<!--  의뢰 목록 조회 -->
	<select id="selectWorkerRequestList" resultType="RequestVO">
		SELECT title
			   , write_dt
			   , FIND_COMMONCODE(request_state) as request_state_nm
		FROM request
		WHERE request_no IN (SELECT request_no
		                     FROM proposal
		                     WHERE proposal_state = 'A02'
		                     		AND worker = #{usersNo})
	</select>
	<!--  팀 의뢰 목록 조회 -->
<!-- 	<select id="selectWorkerTeamRequestList"> -->
	
<!-- 	</select> -->

	<!-- 견적서 목록 조회 -->
	<select id="selectWorkerProposalList" resultType="ProposalVO">
		SELECT p.*
			   , FIND_COMMONCODE(p.proposal_state) as proposal_state_nm
        	   , (SELECT SUM(pd.unitprice * pd.qty)
	              FROM proposal_detail pd
	              WHERE pd.proposal_no = p.proposal_no) as total
		FROM proposal p
		WHERE worker = #{usersNo}
		ORDER BY update_dt
	</select>
	<!-- 계약서 목록 조회 -->
	<select id="selectWorkerContractList" resultType="ContractVO">
		SELECT c.*, FIND_COMMONCODE(c.contract_state) as contract_state_nm
		FROM contract c
		WHERE worker_info = #{usersNo}
		ORDER BY c.update_dt
	</select>
	
	<!-- 포트폴리오 목록조회 -->
	<select id="selectWorkerPortfolioList" resultType="PortfolioVO">
		SELECT *
		FROM portfolio
		WHERE users_no = #{usersNo}
	</select>
	
	<!-- 작업자 정보수정 -->
	<delete id="deleteWorkerRegion" parameterType="UserVO">
		DELETE FROM active_region
		WHERE users_no = #{usersNo}
	</delete>
	
	<delete id="deleteWorkerCategory" parameterType="UserVO">
		DELETE FROM active_category
		WHERE users_no = #{usersNo}
	</delete>
	
	<!-- 포트폴리오 등록 -->
	<insert id="insertWorkerPortfolio" parameterType="PortfolioVO">
		INSERT ALL 
		INTO portfolio ( portfolio_no
								, title
								, content
								, pyung
								, price
								, users_no
								, file_id
								, write_dt
								, update_dt
								, work_time
							  )VALUES(
							  	SEQ_PORTFOLIO.NEXTVAL
								, #{title}
								, #{content}
								, #{pyung}
								, #{price}
								, #{usersNo}
								, #{fileId}
								, sysdate
								, #{updateDt}
								, #{workTime}
							  )
							  
		<foreach item="category" collection="categoryCode" separator="">
		INTO active_category( users_no, category_code )
		VALUES (#{usersNo}, #{category} )
		</foreach>
		
		SELECT *
		FROM dual
	</insert>
	
	<insert id="insertWorkerCode" parameterType="UserVO">
		INSERT ALL
		
		<foreach item="region" collection="regionCode" separator="">
		INTO active_region( users_no, region_code ) 
		VALUES ( #{usersNo}, #{region} )
		</foreach>

	
		<foreach item="category" collection="categoryCode" separator="">
		INTO active_category( users_no, category_code )
		VALUES (#{usersNo}, #{category} )
		</foreach>
		
		SELECT *
		FROM dual
	</insert>

	<insert id="insertCareer" parameterType="CareerVO">
		INSERT INTO career( career_no
							, users_no
							, career_info
							, career_start_dt
							, career_end_dt
							, file_id
							, career_access_tf
							, write_dt
							) VALUES (
							 SEQ_CAREER.NEXTVAL
							 , #{usersNo}
							 , #{careerInfo}
							 , #{careerStartDt}
							 , #{careerEndDt}
							 , #{fileId}
							 , 'A01'
							 , sysdate
							)
	</insert>


	<update id="updateWorkerInfo" parameterType="UserVO">
		UPDATE users
		SET users_nick = #{usersNick}
			, users_phone = #{usersPhone}
			, users_email = #{usersEmail}
		WHERE users_id = #{usersId}
	</update>

	<update id="updateWorkerPw" parameterType="UserVO">
		UPDATE users
		SER users_pw = #{usersNewPw}
		WHERE users_id = #{usersId}
	</update>

	<!-- 작업자 탈퇴 -->
	<update id="updateWorkerState" parameterType="UserVO">
		UPDATE users
		SET users_state = quit
		WHERE users_id = #{usersId}
	</update>
	
	
</mapper>