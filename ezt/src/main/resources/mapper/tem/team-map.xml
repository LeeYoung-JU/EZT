<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.tem.mapper.TeamMapper">
<resultMap type="TeamVO" id="twcMap">
	<id column="team_no" property="teamNo"/>
	<collection property="workCategoryVO" javaType="ArrayList"  column="team_no" ofType="TeamWorkCategoryVO" select="countMember" />
</resultMap>
<!-- 팀신청 전체 조회 -->
<select id="teamList" resultMap="twcMap">
	SELECT t.team_no
			,t.work_title
			,t.work_content
			,t.writer
			,USERNAME(t.writer) as writer_name
			,t.write_dt
			,t.contract_no
			,FIND_COMMONCODE(r.region_code) as region_code
			,r.request_no
			, (SELECT  SUM(headcount)
		       FROM team_work_category
			   WHERE team_no = t.team_no) head_count
	FROM team t
		JOIN contract c
		ON c.contract_no = t.contract_no
		JOIN proposal p
		ON p.proposal_no = c.proposal_no
		JOIN request r
		ON r.request_no = p.request_no
	ORDER BY write_dt DESC
</select>

<!-- 팀신청 단건조회 -->
<select id="teamInfo" resultMap="twcMap">
	SELECT   t.team_no
			,t.work_title
			,t.work_content
			,USERNAME(t.writer) as writer_name
			,t.write_dt
			,t.contract_no
			,FIND_COMMONCODE(r.region_code) as region_code
			,r.request_no
			
	FROM team t
		JOIN contract c
		ON c.contract_no = t.contract_no
		JOIN proposal p
		ON p.proposal_no = c.proposal_no
		JOIN request r
		ON r.request_no = p.request_no
		
	WHERE t.team_no = #{teamNo}
</select>

<!-- 팀신청 카테고리 별 인원 -->
<select id="countMember" resultType="TeamWorkCategoryVO">
	SELECT   FIND_COMMONCODE(w.work_code) as work_code
        ,w.work_code as category_code
        ,w.team_no
        ,w.headcount
        ,w.hire_complete_tf
        ,(SELECT COUNT(*)
          FROM member m 
          WHERE m.work_code = w.work_code) part_count
	FROM team_work_category w
	
	WHERE team_no = #{teamNo}
</select>

<!-- 팀 신청하기 -->

<!-- 팀신청 수정하기(제목, 내용) -->
<update id="updateTeam" parameterType="TeamVO">
	UPDATE team
	
	SET work_title = #{workTitle}
		,work_content = #{workContent}
		
	WHERE team_no = #{teamNo}
</update>

<!-- 팀신청 삭제하기 -->
<delete id="deleteTeam" parameterType="int">
	DELTET FROM team
	WHERE team_no = #{teamNo}
</delete>

<!-- 팀신청 상세 등록(카테고리,카테고리 별 인원) -->
<insert id="insertCategory" parameterType="TeamVO">
	INSERT INTO team_work_category
	(
		 work_code;
		,headcount;
		,hire_complete_tf;
		,team_no;
	)
	VALUES
	(
		#{workCode}
		,#{headcount}
		,#{hireCompleteTf}
		,#{teamNo}
	)
</insert>

<!-- 팀신청 상세 수정하기 -->
<update id="updateCategory" parameterType="TeamWorkCategoryVO">
	UPDATE team_work_category
	
	SET	work_code = #{workCode}
		,headcount = #{headcount}
		,hire_complete_tf = #{hireCompleteTf}
	WHERE team_no = #{teamNo} and work_code = #{workCode}
</update>
<!-- 팀신청 상세 삭제하기 -->
<delete id="deleteCategory" parameterType="TeamWorkCategoryVO">
	DELETE FROM team_work_category
	WHERE team_no = #{teamNo} and work_code = #{workCode}
</delete>
</mapper>