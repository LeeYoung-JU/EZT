<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.adm.mapper.AdminMapper">
	<!-- 통계관련 -->
	<select id="selectJoinStatistics" resultType="java.util.HashMap">
		SELECT COUNT(1) num
		        , TO_CHAR(users_join_dt+1, 'yyyy/MM/dd') dt
		        , users_role role
		FROM users
		WHERE 
<!--		    users_join_dt >= TO_CHAR(sysdate - 7) AND-->
			<![CDATA[
		    users_join_dt < TO_CHAR((SELECT MAX(users_join_dt)+1 FROM users), 'yyyy/MM/dd')
		    ]]>
		    AND users_role IN ('ROLE_USER', 'ROLE_WORKER')
		GROUP BY TO_CHAR(users_join_dt+1,'yyyy/MM/dd'), users_role
		ORDER BY TO_CHAR(users_join_dt+1,'yyyy/MM/dd')
	</select>
	
	<select id="selectReqCategoryStatistics" resultType="java.util.HashMap">
		SELECT COUNT(*) num
		        , FIND_COMMONCODE(category_code) category
		FROM request
		GROUP BY category_code
		ORDER BY category_code
	</select>
	<select id="selectReqRegionStatistics" resultType="java.util.HashMap">
		SELECT COUNT(*) num
        		, FIND_COMMONCODE(region_code) region
		FROM request
		GROUP BY region_code
	</select>
	
	<!-- 의뢰 관련 -->
	<select id="selectRequests" resultType="RequestVO">
		SELECT r.request_no
              ,r.requester
              ,FIND_COMMONCODE(r.ctt_place) as ctt_place
              ,r.title
              ,r.content
              ,r.write_dt
              ,r.request_state as request_state
              ,FIND_COMMONCODE(r.request_state) as request_state_nm
              ,f.save_path
              ,f.save_name
              ,f.original_file_name
              ,f.ext
              ,FIND_COMMONCODE(r.category_code) as category_code
              ,FIND_COMMONCODE(r.region_code) as region_code
              ,(SELECT users_name
              	FROM users
              	WHERE users_no = r.requester) users_name
        FROM request r
	        LEFT OUTER JOIN file_detail_info f
	        ON r.file_id = f.file_id AND f.boss_tf = 'Y'
        ORDER BY write_dt DESC
	</select>
	
	<!-- 유저관련 -->
	<select id="selectUsers" resultType="UserVO">
		SELECT users_no
				, users_id
				, users_email
				, users_birth
				, users_rnn
				, users_gender
				, users_name
				, users_phone
				, users_state
				, FIND_COMMONCODE(users_state) users_state_nm
				, users_nick
				, users_role
				, users_join_dt
				, file_id
		FROM users
		ORDER BY users_join_dt DESC
	</select>
	<select id="selectUser" parameterType="int" resultType="UserVO">
		SELECT users_no
				, users_id
				, users_email
				, users_birth
				, users_rnn
				, users_gender
				, users_name
				, users_phone
				, FIND_COMMONCODE(users_state) users_state
				, users_nick
				, users_role
				, users_join_dt
				, users_state_change_dt
				, file_id
		FROM users
		WHERE users_no = #{uno}
	</select>
	
	<update id="updateUsersStatePause" parameterType="int">
		UPDATE users
		SET users_state = 'pause'
			, users_state_change_dt = sysdate
		WHERE users_no = #{uno}
	</update>
	<update id="updateUsersStateActive" parameterType="int">
		UPDATE users
		SET users_state = 'active'
			, users_state_change_dt = sysdate
		WHERE users_no = #{uno}
	</update>
	
	<!-- 통일 계약서 관련 -->
	<select id="selectUnityContracts" resultType="UnityContractVO">
		SELECT unity_contract_no
				, contract_terms_content
				, write_dt
				, use_tf
				, basic_contract_tf
				, title
				, changes
		FROM unity_contract
		ORDER BY unity_contract_no DESC
	</select>
	<select id="selectUnityContract" parameterType="int" resultType="UnityContractVO">
		SELECT unity_contract_no
				, contract_terms_content
				, write_dt
				, use_tf
				, basic_contract_tf
				, title
				, changes
		FROM unity_contract
		WHERE unity_contract_no = #{no}
	</select>
	<insert id="insertUnityContract" parameterType="UnityContractVO">
		<selectKey	keyProperty="unityContractNo"
					resultType="Integer"
					order="AFTER">
			SELECT SEQ_UNITYCONTRACT.CURRVAL
			FROM dual
		</selectKey>
		INSERT INTO unity_contract (
			unity_contract_no
			, contract_terms_content
			, title
			, changes
			, basic_contract_tf
		) VALUES (
			SEQ_UNITYCONTRACT.NEXTVAL
			, #{contractTermsContent}
			, #{title}
			, #{changes}
			, 'N'
		)
	</insert>
	<update id="updateUnityContractBasicTfN">
		UPDATE unity_contract
		SET basic_contract_tf = 'N'
	</update>
	<update id="updateUnityContractBasicTfY">
		UPDATE unity_contract
		SET basic_contract_tf = 'Y'
		WHERE unity_contract_no = #{no}
	</update>
	
	
	<!-- 경력 인증 관련 -->
	<select id="selectCareers" resultType="CareerVO">
		SELECT c.career_no
				, c.users_no
				, (	SELECT users_name
					FROM users
					WHERE users_no = c.users_no) users_name
				, c.career_info
				, c.career_start_dt
				, c.career_end_dt
				, c.file_id
				, c.career_access_tf
				, FIND_COMMONCODE(c.career_access_tf) career_access_tf_Nm
				, c.write_dt
		FROM career c
		ORDER BY write_dt DESC
	</select>
	<select id="selectCareer" parameterType="int" resultType="CareerVO">
		SELECT c.career_no
				, c.users_no
				, (	SELECT users_name
					FROM users
					WHERE users_no = c.users_no) users_name
				, c.career_info
				, c.career_start_dt
				, c.career_end_dt
				, c.file_id
				, c.career_access_tf
				, FIND_COMMONCODE(c.career_access_tf) career_access_tf_Nm
				, c.write_dt
		FROM career c
		WHERE career_no = #{no}
		ORDER BY write_dt DESC
	</select>
	<update id="updateCareerAccept" parameterType="int">
		UPDATE career
		SET career_access_tf = 'A02'
		WHERE career_no = #{no}
	</update>
	<update id="updateCareerDeny" parameterType="int">
		UPDATE career
		SET career_access_tf = 'A03'
		WHERE career_no = #{no}
	</update>
	<insert id="insertCareerDeny" parameterType="Map">
		INSERT INTO career_deny(
			content
			, writer
			, career_no
		) VALUES (
			#{content}
			, #{writer}
			, #{careerNo}
		)
	</insert>
	<delete id="deleteCareerDeny" parameterType="int">
		DELETE FROM career_deny
		WHERE career_no = #{no}
	</delete>
	<select id="selectPayManages" statementType="CALLABLE" resultType="java.util.HashMap">
		{CALL
			pl_get_adm_payment_info()
		}
		
	</select>
</mapper>