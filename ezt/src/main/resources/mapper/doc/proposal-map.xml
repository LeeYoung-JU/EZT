<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.doc.mapper.ProposalMapper">

	<!-- 유저정보조회 -->
	<select id="selectUserInfo" resultType="UserVO">
		SELECT users_no
		, users_id
		, users_phone
		, users_name
		, users_Rnn
		FROM users
		WHERE users_no = #{usersNo}
	</select>
	
	<!-- 견적서 의뢰정보조회 -->
	<select id="selectReqInfo" resultType="RequestVO">
		SELECT request_no
		, requester
		, FIND_COMMONCODE(category_code) as category_code
		, FIND_COMMONCODE(ctt_place) as ctt_place
		, ctt_place_area
		, FIND_COMMONCODE(ctt_place_situation) as ctt_place_situation
		, postcode
		, address
		, detail_address
		, TITLE
		, hope_ctt_budget
		, hope_ctt_start_dt
		, hope_ctt_end_dt
		, content
		FROM request 
		WHERE request_no = #{requestNo}
	</select>

	<!-- 견적서 단건조회 -->
	<select id="selectPpsInfo" resultType="ProposalVO">
		SELECT
		proposal_no
		, request_no
		, ctt_start_dt
		, ctt_end_dt
		, write_dt
		, worker_postcode
		, worker_address
		, worker_detail_address
		, comments
		, file_id
		, worker
		, requester
		, update_dt
		, proposal_state
		FROM proposal
		WHERE proposal_no =	#{proposalNo}
	</select>

	<!-- 견적서 상세조회 -->
	<select id="selectPpsDetailList" resultType="ProposalDetailVO">
		SELECT
		proposal_detail_no
		, proposal_no
		, product
		, unit
		, qty
		, unitprice
		, comments
		, division
		FROM proposal_detail
		WHERE proposal_no =
		#{proposalNo}
		order by proposal_detail_no
	</select>

<!-- 견적서 등록 -->
	<insert id="insertPpsInfo" parameterType="ProposalVO">
		<selectKey keyProperty="proposalNo" resultType="Integer"
			order="BEFORE">
			SELECT SEQ_PROPOSAL.NEXTVAL
			FROM dual
		</selectKey>
		INSERT INTO proposal(
		proposal_no
		, request_no
		, ctt_start_dt
		, ctt_end_dt
		, write_dt
		, worker_postcode
		, worker_address
		, worker_detail_address
		, comments
		<if test="fileId != null">
		, file_id
		</if>
		, worker
		, requester
		, update_dt
		)
		VALUES(
		#{proposalNo}
		, #{requestNo}
		, #{cttStartDt}
		, #{cttEndDt}
		, sysdate
		, #{workerPostcode}
		, #{workerAddress}
		, #{workerDetailAddress}
		, #{comments}
		<if test="fileId != null">
		, #{fileId}
		</if>
		, #{worker}
		, #{requester}
		, sysdate
		)
	</insert>
<!-- 견적서 상세 등록 -->
	<insert id="insertPpsDetailInfo" parameterType="ProposalDetailVO">
		<selectKey keyProperty="proposalDetailNo" resultType="Integer"
			order="BEFORE">
			SELECT SEQ_PROPOSALDETAIL.NEXTVAL
			FROM dual
		</selectKey>
		INSERT INTO proposal_detail(
		proposal_detail_no
		, proposal_no
		, product
		, unit
		, qty
		, unitprice
		, comments
		, division
		)
		VALUES(
		#{proposalDetailNo}
		, #{proposalNo}
		, #{product}
		, #{unit}
		, #{qty}
		, #{unitprice}
		, #{comments}
		, #{division}
		)
	</insert>
	
	<!-- 견적서 수정 -->
	<update id="updatePpsInfo" parameterType="ProposalVO">
		
		UPDATE proposal
		SET
		ctt_start_dt = #{cttStartDt}
		, ctt_end_dt = #{cttEndDt}
		, worker_postcode =  #{workerPostcode}
		, worker_address = #{workerAddress}
		, worker_detail_address = #{workerDetailAddress}
		, comments = #{comments}
		, update_dt = sysdate
		WHERE proposal_no = #{proposalNo}
	</update>
	
	<!-- 견적서 단건 전송 -->
	<update id="sendPpsInfo" statementType="CALLABLE" parameterType="ProposalVO">
		{Call 
			send_proposal( #{proposalNo}, #{requestNo}, #{worker})
		}
	</update>
	
	<!-- 견적서 승인 -->
	<update id="approvePpsInfo" statementType="CALLABLE" parameterType="ProposalVO">
		{Call 
			approve_proposal( #{proposalNo}, #{requestNo})
		}
	</update>

	
	<!-- 견적서 삭제 -->
	<delete id="deletePpsInfo" parameterType="int">
		DELETE FROM proposal
		WHERE proposal_no = #{proposalNo}
	</delete>
	<!-- 견적서 상세 삭제 -->
	<delete id="deletePpsDetailInfo" parameterType="int">
		DELETE FROM proposal_detail
		WHERE proposal_no = #{proposalNo}
	</delete>
	
	
	<!-- 파일 정보 DB&견적서 삭제 -->
	<delete id="deleteFileInfo" statementType="CALLABLE">
		{CALL
			delete_file_id(#{fileId})
			}
	</delete>

	<!-- 견적서 목록 조회 -->
	<select id="selectPpsListInfo" resultType="ProposalVO">
		SELECT
		proposal_no
		, request_no
		, ctt_start_dt
		, ctt_end_dt
		, write_dt
		, worker_postcode
		, worker_address
		, worker_detail_address
		, comments
		, file_id
		, worker
		, requester
		, update_dt
		, proposal_state
		FROM proposal
		WHERE request_no =
		#{requestNo} and worker= #{worker} and proposal_state IS NULL
	</select>

</mapper>